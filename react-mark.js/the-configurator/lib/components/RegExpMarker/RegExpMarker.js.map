{"version":3,"file":"RegExpMarker.js","sourceRoot":"","sources":["../../../src/components/RegExpMarker/RegExpMarker.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,iCAA0E;AAC1E,sDAAsD;AAS/C,MAAM,YAAY,GAAgC,CAAC,EAMzD,EAAE,EAAE;QANqD,EACxD,IAAI,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,EACrB,OAAO,GAAG,EAAE,EACZ,EAAE,GAAG,KAAK,EACV,QAAQ,OAET,EADI,SAAS,cAL4C,qCAMzD,CADa;IAEZ,MAAM,SAAS,GAAG,IAAA,cAAM,EAAiB,IAAI,CAAC,CAAC;IAC/C,MAAM,CAAC,cAAc,EAAE,iBAAiB,CAAC,GAAG,IAAA,gBAAQ,GAAU,CAAC;IAC/D,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,cAAc,EAAE;YAClB,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBACjD,IAAI;oBACF,cAAc,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;iBAC1C;gBAAC,OAAO,KAAK,EAAE;oBACd,OAAO,CAAC,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;iBACvC;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,MAAM,cAAc,GAAG,IAAI,iBAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACrD,iBAAiB,CAAC,cAAc,CAAC,CAAC;SACnC;IACH,CAAC,EAAE,CAAC,IAAI,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC;IACpC,OAAO,IAAA,qBAAa,EAAC,EAAE,kBAAI,QAAQ,EAAE,GAAG,EAAE,SAAS,IAAK,SAAS,EAAG,CAAC;AACvE,CAAC,CAAC;AAxBW,QAAA,YAAY,gBAwBvB","sourcesContent":["import React, { createElement, useEffect, useRef, useState } from 'react';\nimport MarkJS, { RegExpMarkerOptions } from 'mark.js';\n\ntype RegExpMarkerProps = {\n  mark?: RegExp;\n  options?: RegExpMarkerOptions;\n  As?: string;\n  children: React.ReactNode;\n};\n\nexport const RegExpMarker: React.FC<RegExpMarkerProps> = ({\n  mark = new RegExp(''),\n  options = {},\n  As = 'div',\n  children,\n  ...restProps\n}) => {\n  const markerRef = useRef<HTMLDivElement>(null);\n  const [markerInstance, setMarkerInstance] = useState<MarkJS>();\n  useEffect(() => {\n    if (markerInstance) {\n      Promise.resolve(markerInstance.unmark()).then(() => {\n        try {\n          markerInstance.markRegExp(mark, options);\n        } catch (error) {\n          console.error('invalid regex', error);\n        }\n      });\n    } else {\n      const markerInstance = new MarkJS(markerRef.current);\n      setMarkerInstance(markerInstance);\n    }\n  }, [mark, markerInstance, options]);\n  return createElement(As, { children, ref: markerRef, ...restProps });\n};\n"]}