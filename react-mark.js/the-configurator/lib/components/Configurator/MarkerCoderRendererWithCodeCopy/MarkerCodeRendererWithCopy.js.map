{"version":3,"file":"MarkerCodeRendererWithCopy.js","sourceRoot":"","sources":["../../../../src/components/Configurator/MarkerCoderRendererWithCodeCopy/MarkerCodeRendererWithCopy.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4CAAiE;AACjE,+CAA6D;AAC7D,kFAGmD;AACnD,wDAAqE;AAI9D,MAAM,0BAA0B,GAAG,CAAC,EACzC,IAAI,EACJ,WAAW,EACX,cAAc,EAAE,aAAa,EAC7B,MAAM,EACN,UAAU,EACV,OAAO,GACyB,EAAE,EAAE;IACpC,MAAM,WAAW,GAAG,IAAA,cAAM,EAA6B,IAAI,CAAC,CAAC;IAE7D,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,IAAA,gBAAQ,EAAC,KAAK,CAAC,CAAC;IAExD,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAAS,EAAE,CAAC,CAAC;IAEzD,MAAM,eAAe,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;;QACvC,MAAA,WAAW,CAAC,OAAO,0CAAE,MAAM,EAAE,CAAC;QAC9B,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7B,eAAe,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,YAAY,GAAG,IAAA,mBAAW,EAE9B,CAAC,UAAU,EAAE,EAAE;QACf,aAAa,CAAC,UAAU,CAAC,CAAC;IAC5B,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,WAAW,GAAG,IAAA,mBAAW,EAAC,GAAG,EAAE;QACnC,eAAe,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACL,8BAAC,cAAG,IAAC,QAAQ,EAAC,UAAU;QACtB,8BAAC,uCAAkB,IACjB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,YAAY,EACtB,WAAW,EAAE,WAAW,EACxB,UAAU,EAAE,UAAU,EACtB,cAAc,EAAE,aAAa,EAC7B,MAAM,EAAE,MAAM,GACd;QAEF,8BAAC,cAAG,IAAC,QAAQ,EAAC,UAAU,EAAC,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;YACvC,8BAAC,qBAAU,kBAAY,MAAM,EAAC,KAAK,EAAC,SAAS,EAAC,OAAO,EAAE,eAAe;gBACpE,8BAAC,4BAAe,OAAG,CACR,CACT;QAEN,8BAAC,mBAAQ,IACP,IAAI,EAAE,YAAY,EAClB,gBAAgB,EAAE,IAAI,EACtB,OAAO,EAAE,WAAW,EACpB,YAAY,EAAE;gBACZ,UAAU,EAAE,QAAQ;gBACpB,QAAQ,EAAE,KAAK;aAChB;YAED,8BAAC,gBAAK,IACJ,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAC,SAAS,EAClB,OAAO,EAAC,QAAQ,EAChB,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,cAGf,CACC;QAEX,8BAAC,cAAG,IAAC,QAAQ,EAAC,UAAU,EAAC,KAAK,EAAE,KAAK;YACnC,4CAAU,GAAG,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,GAAa,CAC7D,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAxEW,QAAA,0BAA0B,8BAwErC","sourcesContent":["import { Alert, Box, IconButton, Snackbar } from '@mui/material';\nimport React, { useCallback, useRef, useState } from 'react';\nimport {\n  MarkerCodeRenderer,\n  MarkerCodeRendererProps,\n} from '../MarkerCoderRenderer/MarkerCodeRenderer';\nimport { ContentCopy as ContentCopyIcon } from '@mui/icons-material';\n\nexport type MarkerCodeRendererWithCopyProps = MarkerCodeRendererProps & {};\n\nexport const MarkerCodeRendererWithCopy = ({\n  mark,\n  isMarkArray,\n  isRangesMarker: isRangesMaker,\n  ranges,\n  markerType,\n  options,\n}: MarkerCodeRendererWithCopyProps) => {\n  const textareaRef = useRef<HTMLTextAreaElement | null>(null);\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const [textToCopy, setTextToCopy] = useState<string>('');\n\n  const handleClickCopy = useCallback(() => {\n    textareaRef.current?.select();\n    document.execCommand('copy');\n    setOpenSnackbar(true);\n  }, []);\n\n  const handleChange = useCallback<\n    NonNullable<MarkerCodeRendererProps['onChange']>\n  >((textToCopy) => {\n    setTextToCopy(textToCopy);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setOpenSnackbar(false);\n  }, []);\n\n  return (\n    <Box position=\"relative\">\n      <MarkerCodeRenderer\n        mark={mark}\n        options={options}\n        onChange={handleChange}\n        isMarkArray={isMarkArray}\n        markerType={markerType}\n        isRangesMarker={isRangesMaker}\n        ranges={ranges}\n      />\n\n      <Box position=\"absolute\" top={1} right={1}>\n        <IconButton aria-label=\"copy\" color=\"primary\" onClick={handleClickCopy}>\n          <ContentCopyIcon />\n        </IconButton>\n      </Box>\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={1000}\n        onClose={handleClose}\n        anchorOrigin={{\n          horizontal: 'center',\n          vertical: 'top',\n        }}\n      >\n        <Alert\n          onClose={handleClose}\n          severity=\"success\"\n          variant=\"filled\"\n          sx={{ width: '100%' }}\n        >\n          copied!\n        </Alert>\n      </Snackbar>\n\n      <Box position=\"absolute\" right={10000}>\n        <textarea ref={textareaRef} defaultValue={textToCopy}></textarea>\n      </Box>\n    </Box>\n  );\n};\n"]}