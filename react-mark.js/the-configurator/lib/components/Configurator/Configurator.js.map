{"version":3,"file":"Configurator.js","sourceRoot":"","sources":["../../../src/components/Configurator/Configurator.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4CAAiD;AACjD,+CAAqD;AACrD,mDAAuE;AACvE,uFAG2C;AAC3C,6CAA0C;AAEnC,MAAM,YAAY,GAAG,GAAG,EAAE;IAC/B,MAAM,CACJ,gCAAgC,EAChC,mCAAmC,EACpC,GAAG,IAAA,gBAAQ,EAAkC,EAAE,CAAC,CAAC;IAClD,MAAM,kBAAkB,GAAG,IAAA,mBAAW,EAAwB,CAAC,MAAM,EAAE,EAAE;QACvE,mCAAmC,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,EAAE,IAAI,EAAE,OAAO,GAAG,SAAS,EAAE,GAAG,gCAAgC,CAAC;IAEvE,OAAO,CACL;QACE,8BAAC,eAAI,IAAC,SAAS,QAAC,OAAO,EAAE,CAAC;YACxB,8BAAC,eAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE;gBACf,8BAAC,qBAAU,IAAC,OAAO,EAAC,IAAI,mBAA0B;gBAClD,8BAAC,qBAAU,IAAC,OAAO,EAAC,IAAI;;oBACsB,GAAG;oBAC/C,uCAAK,KAAK,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE,oBAAqB;iJAG3C,CACR;YACP,8BAAC,eAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBACtB,8BAAC,6BAAa,IAAC,QAAQ,EAAE,kBAAkB,GAAI,CAC1C;YACP,8BAAC,eAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;gBACtB,8BAAC,uBAAU,IACT,IAAI,EAAE,IAAc,EACpB,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,gCAAgC,CAAC,UAAU,GACvD,CACG;YACP,8BAAC,eAAI,IAAC,IAAI,QAAC,EAAE,EAAE,EAAE;gBACf,8BAAC,4DAA0B,oBAAK,gCAAgC,EAAI,CAC/D,CACF,CACN,CACJ,CAAC;AACJ,CAAC,CAAC;AAvCW,QAAA,YAAY,gBAuCvB","sourcesContent":["import { Grid, Typography } from '@mui/material';\nimport React, { useCallback, useState } from 'react';\nimport { CompositeForm, OnChangeCompositeForm } from './CompositeForm';\nimport {\n  MarkerCodeRendererWithCopy,\n  MarkerCodeRendererWithCopyProps,\n} from './MarkerCoderRendererWithCodeCopy';\nimport { MarkerDemo } from './MarkerDemo';\n\nexport const Configurator = () => {\n  const [\n    markerCodeRendererWithCopyConfig,\n    setMarkerCodeRendererWithCopyConfig,\n  ] = useState<MarkerCodeRendererWithCopyProps>({});\n  const handleChangeConfig = useCallback<OnChangeCompositeForm>((config) => {\n    setMarkerCodeRendererWithCopyConfig(config);\n  }, []);\n\n  const { mark, options = undefined } = markerCodeRendererWithCopyConfig;\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h2\">Configurator</Typography>\n          <Typography variant=\"h5\">\n            The configurator should help you understand{' '}\n            <pre style={{ display: 'inline' }}>react-mark.js</pre> and its API.\n            Just define your custom options to see what will be marked and view\n            the generated code for your application.\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <CompositeForm onChange={handleChangeConfig} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <MarkerDemo\n            mark={mark as string}\n            options={options}\n            markerType={markerCodeRendererWithCopyConfig.markerType}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <MarkerCodeRendererWithCopy {...markerCodeRendererWithCopyConfig} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n"]}