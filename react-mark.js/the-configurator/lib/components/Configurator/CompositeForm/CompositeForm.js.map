{"version":3,"file":"CompositeForm.js","sourceRoot":"","sources":["../../../../src/components/Configurator/CompositeForm/CompositeForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  KeywordForm,\n  KeywordFormPropsOnChange,\n  KeywordFormPropsOnChangeKeyword,\n} from \"../KeywordForm\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  RadioGroupProps,\n} from \"@mui/material\";\nimport { RegExpChangeHandler, RegExpForm } from \"../RegExpForm\";\nimport {\n  OnChangeRanges,\n  RangesMarkerForm,\n  RangesMarkerFormProps,\n} from \"../RangesMarkerForm\";\nimport {\n  MarkerCodeRendererProps,\n  MarkerType,\n} from \"../MarkerCoderRenderer/MarkerCodeRenderer\";\nimport React from \"react\";\nimport { noop } from \"lodash/fp\";\nimport { MarkOptions, RangeMarkerItem } from \"mark.js\";\n\nexport type ConfigType = \"keyword\" | \"keywordArray\" | \"regExp\" | \"ranges\";\n\nexport type OnChangeCompositeForm = (\n  updatedConfig: Omit<MarkerCodeRendererProps, \"onChange\">\n) => void;\n\nexport type CompositeFormProps = {\n  onChange?: OnChangeCompositeForm;\n};\n\nexport const CompositeForm = ({ onChange = noop }: CompositeFormProps) => {\n  const [configType, setConfigType] = useState<ConfigType>(\"keyword\");\n\n  const [mark, setMark] = useState<string | RegExp | RangeMarkerItem[]>(\n    \"Lorem Ipsum\"\n  );\n\n  const [ranges, setRanges] = useState<RangesMarkerFormProps[\"ranges\"]>();\n\n  const [options, setOptions] = useState<MarkOptions | undefined>();\n\n  const handleChangeOptions = useCallback<KeywordFormPropsOnChange>(\n    (options) => {\n      setOptions(options);\n    },\n    []\n  );\n\n  const handleChangeKeyword = useCallback<KeywordFormPropsOnChangeKeyword>(\n    (keyword) => {\n      setMark(keyword);\n    },\n    []\n  );\n\n  const handleChangeRegExp = useCallback<RegExpChangeHandler>((keyword) => {\n    setMark(keyword);\n  }, []);\n\n  const handleChangeConfigType = useCallback<\n    NonNullable<RadioGroupProps[\"onChange\"]>\n  >((_evt, value) => {\n    const valueRef = value as ConfigType;\n    setConfigType(valueRef);\n    if (valueRef === \"keyword\") {\n      setMark(\"Lorem Ipsum\");\n    } else if (valueRef === \"keywordArray\") {\n      setMark(JSON.stringify([\"Lorem\", \"Ipsum\"]));\n    } else if (valueRef === \"regExp\") {\n      setMark(/Lorem/);\n    } else if (valueRef === \"ranges\") {\n      setRanges([{ length: 7, start: 3 }]);\n      setMark([{ length: 7, start: 3 }]);\n    }\n  }, []);\n\n  const handleChangeRanges = useCallback<OnChangeRanges>((ranges) => {\n    setRanges(ranges);\n    setMark(ranges);\n  }, []);\n\n  const isKeywordsArray = useMemo(\n    () => configType === \"keywordArray\" || configType === \"regExp\",\n    [configType]\n  );\n\n  const isRangesMarker = useMemo(() => configType === \"ranges\", [configType]);\n\n  const markerType: MarkerType = useMemo<MarkerType>(() => {\n    if (configType === \"keyword\" || configType === \"keywordArray\")\n      return \"Marker\";\n    if (configType === \"ranges\") return \"RangesMarker\";\n    return \"RegExpMarker\";\n  }, [configType]);\n\n  useEffect(() => {\n    onChange({\n      isMarkArray: isKeywordsArray,\n      isRangesMarker: isRangesMarker,\n      mark,\n      markerType,\n      options: options,\n      ranges,\n    });\n  }, [\n    isKeywordsArray,\n    isRangesMarker,\n    options,\n    mark,\n    markerType,\n    onChange,\n    ranges,\n  ]);\n\n  return (\n    <>\n      <RadioGroup\n        aria-labelledby=\"config-type\"\n        name=\"config-type\"\n        value={configType}\n        row\n        onChange={handleChangeConfigType}\n        sx={{ my: 1 }}\n      >\n        <FormControlLabel value=\"keyword\" control={<Radio />} label=\"Keyword\" />\n        <FormControlLabel\n          value=\"keywordArray\"\n          control={<Radio />}\n          label=\"Array Of Keywords\"\n        />\n        <FormControlLabel\n          value=\"regExp\"\n          control={<Radio />}\n          label=\"Custom RegExp\"\n        />\n        <FormControlLabel value=\"ranges\" control={<Radio />} label=\"Ranges\" />\n      </RadioGroup>\n      {configType === \"keyword\" || configType === \"keywordArray\" ? (\n        <KeywordForm\n          keyword={mark as string}\n          isKeywordsArray={isKeywordsArray}\n          onChange={handleChangeOptions}\n          onChangeKeyword={handleChangeKeyword}\n        />\n      ) : null}\n      {configType === \"regExp\" ? (\n        <RegExpForm\n          onChangeRegExp={handleChangeRegExp}\n          onChangeOptions={handleChangeOptions}\n        />\n      ) : null}\n      {isRangesMarker ? (\n        <RangesMarkerForm\n          ranges={mark as RangeMarkerItem[]}\n          onChangeRanges={handleChangeRanges}\n          onChangeOptions={handleChangeOptions}\n        />\n      ) : null}\n    </>\n  );\n};\n"]}