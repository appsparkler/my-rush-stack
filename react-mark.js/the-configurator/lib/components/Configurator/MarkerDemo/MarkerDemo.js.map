{"version":3,"file":"MarkerDemo.js","sourceRoot":"","sources":["../../../../src/components/Configurator/MarkerDemo/MarkerDemo.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4CAA2C;AAO3C,+CAAuC;AACvC,iDAAmE;AASnE,MAAM,OAAO,GAAG,GAAG,EAAE,CAAC,CACpB,8BAAC,qBAAU,0gCAeE,CACd,CAAC;AAEK,MAAM,UAAU,GAAG,CAAC,EACzB,IAAI,GAAG,EAAE,EACT,OAAO,GAAG,EAAE,EACZ,UAAU,GAAG,QAAQ,GACL,EAAE,EAAE;IACpB,MAAM,KAAK,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QACzB,IAAI;YACF,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChC,OAAO,MAAM,CAAC;aACf;YACD,oBAAoB;SACrB;QAAC,OAAO,CAAC,EAAE;YACV,4BAA4B;YAC5B,OAAO,IAAI,CAAC;SACb;IACH,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACX,uDAAuD;IACvD,MAAM,EAAE,UAAU,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QACtE,OAAO;YACL,UAAU,EAAE,UAAU,KAAK,QAAQ;YACnC,gBAAgB,EAAE,UAAU,KAAK,cAAc;YAC/C,gBAAgB,EAAE,UAAU,KAAK,cAAc;SAChD,CAAC;IACJ,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;IACjB,OAAO,CACL;QACG,UAAU,CAAC,CAAC,CAAC,CACZ,8BAAC,sBAAM,IAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;YACnC,8BAAC,OAAO,OAAG,CACJ,CACV,CAAC,CAAC,CAAC,IAAI;QACP,gBAAgB,CAAC,CAAC,CAAC,CAClB,8BAAC,4BAAY,IAAC,IAAI,EAAE,IAAc;YAChC,8BAAC,OAAO,OAAG,CACE,CAChB,CAAC,CAAC,CAAC,IAAI;QACP,gBAAgB,CAAC,CAAC,CAAC,CAClB,8BAAC,4BAAY,IAAC,IAAI,EAAE,IAAyB,EAAE,OAAO,EAAE,OAAO;YAC7D,8BAAC,OAAO,OAAG,CACE,CAChB,CAAC,CAAC,CAAC,IAAI,CACP,CACJ,CAAC;AACJ,CAAC,CAAC;AA5CW,QAAA,UAAU,cA4CrB","sourcesContent":["import { Typography } from '@mui/material';\nimport {\n  MarkOptions,\n  RangeMarkerItem,\n  RangesMarkerOptions,\n  RegExpMarkerOptions,\n} from 'mark.js';\nimport React, { useMemo } from 'react';\nimport { Marker, RangesMarker, RegExpMarker } from 'react-mark.js';\nimport { MarkerType } from '../MarkerCoderRenderer';\n\nexport type MarkerDemoProps = {\n  mark?: string | RegExp | RangeMarkerItem[];\n  options?: RegExpMarkerOptions | RangesMarkerOptions | MarkOptions;\n  markerType?: MarkerType;\n};\n\nconst Content = () => (\n  <Typography>\n    Lorem ipsum dolor sit āmet, consetetur sadipscing elitr, sed diam nonumy\n    eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam\n    voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet\n    clita kasd gubergren, one, nò sea takimata 1 sanctus est Lorem ipsum dolor\n    sit amet. Lörem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam\n    lor­em ipsum nonumy eirmod tempor invidunt ut labore et dolore magna\n    aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo\n    dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est\n    lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur\n    sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore\n    magna aliquyam erat. Lorem ipsum dolor sit amet, consetetur sadipscing\n    elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna\n    aliquyam erat. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed\n    diam nonumy. Lore'm ipsu%m dolor sit amet. Lo!rem ipsum.\n  </Typography>\n);\n\nexport const MarkerDemo = ({\n  mark = '',\n  options = {},\n  markerType = 'Marker',\n}: MarkerDemoProps) => {\n  const $mark = useMemo(() => {\n    try {\n      if (typeof mark === 'string') {\n        const parsed = JSON.parse(mark);\n        return parsed;\n      }\n      // is a valid object\n    } catch (e) {\n      // is most probably a string\n      return mark;\n    }\n  }, [mark]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const { showMarker, showRangesMarker, showRegExpMarker } = useMemo(() => {\n    return {\n      showMarker: markerType === 'Marker',\n      showRangesMarker: markerType === 'RangesMarker',\n      showRegExpMarker: markerType === 'RegExpMarker',\n    };\n  }, [markerType]);\n  return (\n    <>\n      {showMarker ? (\n        <Marker mark={$mark} options={options}>\n          <Content />\n        </Marker>\n      ) : null}\n      {showRegExpMarker ? (\n        <RegExpMarker mark={mark as RegExp}>\n          <Content />\n        </RegExpMarker>\n      ) : null}\n      {showRangesMarker ? (\n        <RangesMarker mark={mark as RangeMarkerItem[]} options={options}>\n          <Content />\n        </RangesMarker>\n      ) : null}\n    </>\n  );\n};\n"]}