{"version":3,"file":"Marker.js","sourceRoot":"","sources":["../../../src/components/Marker/Marker.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,iCAOe;AACf,sDAA8C;AASvC,MAAM,MAAM,GAAG,CAAgD,EAKrD,EAAE,EAAE;QALiD,EACpE,EAAE,GAAG,KAAK,EACV,IAAI,GAAG,EAAE,EACT,OAAO,GAAG,EAAE,OAEG,EADZ,SAAS,cAJwD,yBAKrE,CADa;IAEZ,MAAM,SAAS,GAAG,IAAA,cAAM,EAAwB,IAAI,CAAC,CAAC;IACtD,MAAM,CAAC,YAAY,EAAE,eAAe,CAAC,GAAG,IAAA,gBAAQ,GAAU,CAAC;IAE3D,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,SAAS,CAAC,OAAO,EAAE;YACrB,MAAM,YAAY,GAAG,IAAI,iBAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACnD,eAAe,CAAC,YAAY,CAAC,CAAC;SAC/B;IACH,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,YAAY,EAAE;YAChB,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC/C,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;IAElC,OAAO,IAAA,qBAAa,EAAC,EAAE,kBAAI,GAAG,EAAE,SAAS,IAAK,SAAS,EAAG,CAAC;AAC7D,CAAC,CAAC;AAzBW,QAAA,MAAM,UAyBjB","sourcesContent":["import React, {\n  createElement,\n  ElementType,\n  HTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport MarkJS, { MarkOptions } from 'mark.js';\n\nexport type MarkerProps<T = HTMLAttributes<HTMLDivElement>> = {\n  children?: React.ReactNode;\n  as?: string | ElementType;\n  mark?: string | string[];\n  options?: MarkOptions;\n} & T;\n\nexport const Marker = <T extends {} = HTMLAttributes<HTMLDivElement>>({\n  as = 'div',\n  mark = '',\n  options = {},\n  ...restProps\n}: MarkerProps<T>) => {\n  const markerRef = useRef<HTMLDivElement | null>(null);\n  const [markInstance, setMarkInstance] = useState<MarkJS>();\n\n  useEffect(() => {\n    if (markerRef.current) {\n      const markInstance = new MarkJS(markerRef.current);\n      setMarkInstance(markInstance);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (markInstance) {\n      Promise.resolve(markInstance.unmark()).then(() => {\n        markInstance.mark(mark, options);\n      });\n    }\n  }, [mark, markInstance, options]);\n\n  return createElement(as, { ref: markerRef, ...restProps });\n};\n"]}