{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/utils/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,kCAA8C;AAC9C,gDAA8B;AAEjB,QAAA,cAAc,GAAG,IAAA,WAAM,EAAS,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AAE/D,MAAM,SAAS,GAAG,CACvB,MAAW,EACX,EAAE,CACF,IAAA,SAAI,EACF,0BAAkB,EAClB,sBAAc,CACf,CAAC,MAAM,CAAC,CAAC;AANC,QAAA,SAAS,aAMV;AAEL,MAAM,kBAAkB,GAAG,CAChC,MAAW,EACX,EAAE,CACF,IAAA,QAAG,EAA0C,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CACzD,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CACxE,CAAC,MAAM,CAAC,CAAC;AALC,QAAA,kBAAkB,sBAKnB;AAEZ,+CAA+C;AACxC,MAAM,aAAa,GAAG,CAAC,GAAW,EAAE,EAAE;IAC3C,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAC5C,aAAa;IACb,MAAM,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAE/C,MAAM,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IAC7C,gBAAgB;IAChB,MAAM,OAAO,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAEpD,iBAAiB;IACjB,IAAI;QACF,MAAM,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACrC,OAAO,EAAE,CAAC;KACX;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;KACvB;AACH,CAAC,CAAC;AAhBW,QAAA,aAAa,iBAgBxB","sourcesContent":["import { filter, map, pipe } from 'lodash/fp';\nexport * from './array-utils';\n\nexport const filterOutFalsy = filter<string>((item) => Boolean(item));\n\nexport const getValues = <T extends { value?: ValueType }, ValueType = string>(\n  values: T[]\n) =>\n  pipe<[{ value?: ValueType }[]], (string | undefined)[], string[]>(\n    mapExcludesToValue,\n    filterOutFalsy\n  )(values);\n\nexport const mapExcludesToValue = <T extends { value?: unknown }>(\n  values: T[]\n) =>\n  map<{ value?: unknown }, string | undefined>(({ value }) =>\n    Boolean(value) && typeof value === 'string' ? String(value) : undefined\n  )(values);\n\n// https://stackoverflow.com/a/55258958/4742733\nexport const stringToRegex = (str: string) => {\n  const stringMatch = str.match(/\\/(.+)\\/.*/);\n  // Main regex\n  const main = stringMatch ? stringMatch[1] : '';\n\n  const optionsMatch = str.match(/\\/.+\\/(.*)/);\n  // Regex options\n  const options = optionsMatch ? optionsMatch[1] : '';\n\n  // Compiled regex\n  try {\n    const re = new RegExp(main, options);\n    return re;\n  } catch (error) {\n    return new RegExp('');\n  }\n};\n"]}