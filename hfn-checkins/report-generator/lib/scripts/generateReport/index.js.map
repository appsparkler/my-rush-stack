{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/scripts/generateReport/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { app } from './firebase-app'\nimport { CheckinTypesEnum, IAbhyasiCheckinApiStoreData, } from '@hfn-checkins/types';\nimport { map } from 'lodash/fp'\nimport {google, sheets_v4 as sheetsV4} from \"googleapis\";\n\nconst CHECKINS_COLLECTION_NAME = \"checkins\";\nconst NUMBER_OF_RECORDS = 500;\n\ntype AbhyasiIdCheckinDataSnapshot = FirebaseFirestore.QueryDocumentSnapshot<IAbhyasiCheckinApiStoreData>;\n\ninterface IResponse  {\n  status: \"success\" | \"error\";\n  message?: string;\n}\n\ninterface FetchAbhyasiIdCheckinsNotUpdatedInReport {\n  (): Promise<{\n    docs: AbhyasiIdCheckinDataSnapshot[];\n    data: IAbhyasiCheckinApiStoreData[];\n  }>;\n}\n\nconst fetchAbhyasiIdCheckinsNotUpdatedInReport: FetchAbhyasiIdCheckinsNotUpdatedInReport =\n  async () => {\n    try {\n      const db = app.firestore();\n      const abhyasiIdCheckinsNotUpdatedInReport = (await db\n        .collection(CHECKINS_COLLECTION_NAME)\n        .where(\"type\", \"==\", CheckinTypesEnum.AbhyasiId)\n        .where(\"updatedInReport\", \"==\", false)\n        .limit(NUMBER_OF_RECORDS)\n        .get()) as FirebaseFirestore.QuerySnapshot<IAbhyasiCheckinApiStoreData>;\n      console.log(abhyasiIdCheckinsNotUpdatedInReport.size);\n      const docsAndData = abhyasiIdCheckinsNotUpdatedInReport.docs.map((doc) => ({\n        doc,\n        data: doc.data() as IAbhyasiCheckinApiStoreData,\n      }));\n\n      return docsAndData.reduce(\n        (acc, { doc, data }) => {\n          return {\n            docs: [...acc.docs, doc],\n            data: [...acc.data, data],\n          };\n        },\n        {\n          docs: [] as AbhyasiIdCheckinDataSnapshot[],\n          data: [] as IAbhyasiCheckinApiStoreData[],\n        }\n      );\n    } catch (error) {\n\n      throw new Error(\"Error in fetching abhyasiIdCheckinsNotUpdatedInReport\")\n    }\n  };\n\nfunction getDefaultAbhyasiData(): IAbhyasiCheckinApiStoreData {\n  return {\n    abhyasiId: \"\",\n    deviceId: \"\",\n    timestamp: 0,\n    type: CheckinTypesEnum.AbhyasiId,\n    updatedInReport: false,\n  };\n}\n\nexport function getISTDateTimeFromTimestamp(timestamp: number): string[] {\n  return new Date(timestamp)\n    .toLocaleString(undefined, { timeZone: \"Asia/Kolkata\" })\n    .split(\", \");\n}\n\nexport const mapAbhyasiIdCheckinDataToCellValues: (\n  data: IAbhyasiCheckinApiStoreData[]\n) => string[][] = map<IAbhyasiCheckinApiStoreData, string[]>(\n  (abhyasiIdData = getDefaultAbhyasiData()) => {\n    const [date, time]: string[] = getISTDateTimeFromTimestamp(\n      abhyasiIdData.timestamp\n    );\n\n    const [reportDate, reportTime] = getISTDateTimeFromTimestamp(Date.now());\n    console.log({ abhyasiIdData });\n    return [\n      reportDate,\n      reportTime,\n      date,\n      time,\n      abhyasiIdData.abhyasiId,\n      abhyasiIdData.deviceId,\n    ];\n  }\n  );\n\n\nconst appendSpreadsheet = async (\n  spreadsheetId: string,\n  range: string,\n  values: (string | undefined)[][]\n): Promise<IResponse> => {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const auth: any = new google.auth.GoogleAuth({\n    keyFile: `./creds-${process.env.NODE_ENV}.json`,\n    scopes: [\n      \"https://www.googleapis.com/auth/cloud-platform\",\n      \"https://www.googleapis.com/auth/drive\",\n      \"https://www.googleapis.com/auth/spreadsheets\",\n    ],\n  });\n\n  const service = google.sheets({ version: \"v4\", auth });\n  const resource: sheetsV4.Params$Resource$Spreadsheets$Values$Append = {\n    spreadsheetId,\n    range,\n    valueInputOption: \"USER_ENTERED\",\n    requestBody: {\n      values,\n    },\n  };\n  await service.spreadsheets.values.append(resource);\n\n  return { status: \"success\" };\n  } catch (error) {\n    console.log('Error in appending spreadsheet', error);\n    return {status: \"error\", message: error.message};\n  }\n}\n\nconst updateDocsWithUpdatedInReport = async (docs: AbhyasiIdCheckinDataSnapshot[]) => {\n  try {\n    const db = app.firestore();\n    const batch = db.batch();\n    docs.forEach((doc) => {\n      batch.update(doc.ref, { updatedInReport: true });\n    });\n    await batch.commit();\n  } catch (error) {\n    console.log(\"Error in updateDocsWithUpdatedInReport\", error);\n  }\n};\n\nconst updateReportForAbhyasiIdCheckins = async () => {\n  try {\n    const { data, docs } = await fetchAbhyasiIdCheckinsNotUpdatedInReport();\n    const formattedDataForSheet = mapAbhyasiIdCheckinDataToCellValues(data);\n    const response = await appendSpreadsheet(\n      \"1ByRuxAUL01phUtN2f_3Dxk9jt8EZtXSjofZIXsPX818\",\n      \"AbhyasiIdCheckins!A1\",\n      formattedDataForSheet\n    );\n    if (response.status === \"success\") {\n      await updateDocsWithUpdatedInReport(docs);\n    }\n  } catch (error) {\n    console.log(\"Error in updateReportForAbhyasiIdCheckins\", error);\n  }\n}\n\nexport const generateReport = async() => {\n  await updateReportForAbhyasiIdCheckins();\n}"]}