{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/scripts/generateReport/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { app } from './firebase-app'\nimport { CheckinTypesEnum, IAbhyasiCheckinApiStoreData, } from '@hfn-checkins/types';\nimport { map } from 'lodash/fp'\n\nconst CHECKINS_COLLECTION_NAME = \"checkins\";\n\ntype AbhyasiIdCheckinDataSnapshot = FirebaseFirestore.QueryDocumentSnapshot<IAbhyasiCheckinApiStoreData>;\n\n\ninterface FetchAbhyasiIdCheckinsNotUpdatedInReport {\n  (): Promise<{\n    docs: AbhyasiIdCheckinDataSnapshot[];\n    data: IAbhyasiCheckinApiStoreData[];\n  }>;\n}\n\nconst fetchAbhyasiIdCheckinsNotUpdatedInReport: FetchAbhyasiIdCheckinsNotUpdatedInReport =\n  async () => {\n    try {\n      const db = app.firestore();\n      const abhyasiIdCheckinsNotUpdatedInReport = (await db\n        .collection(CHECKINS_COLLECTION_NAME)\n        .where(\"type\", \"==\", CheckinTypesEnum.AbhyasiId)\n        .where(\"updatedInReport\", \"==\", false)\n        .limit(10)\n        .get()) as FirebaseFirestore.QuerySnapshot<IAbhyasiCheckinApiStoreData>;\n      console.log(abhyasiIdCheckinsNotUpdatedInReport.size);\n      const docsAndData = abhyasiIdCheckinsNotUpdatedInReport.docs.map((doc) => ({\n        doc,\n        data: doc.data() as IAbhyasiCheckinApiStoreData,\n      }));\n\n      return docsAndData.reduce(\n        (acc, { doc, data }) => {\n          return {\n            docs: [...acc.docs, doc],\n            data: [...acc.data, data],\n          };\n        },\n        {\n          docs: [] as AbhyasiIdCheckinDataSnapshot[],\n          data: [] as IAbhyasiCheckinApiStoreData[],\n        }\n      );\n    } catch (error) {\n\n      throw new Error(\"Error in fetching abhyasiIdCheckinsNotUpdatedInReport\")\n    }\n  };\n\nfunction getDefaultAbhyasiData(): IAbhyasiCheckinApiStoreData {\n  return {\n    abhyasiId: \"\",\n    deviceId: \"\",\n    timestamp: 0,\n    type: CheckinTypesEnum.AbhyasiId,\n    updatedInReport: false,\n  };\n}\n\nexport function getISTDateTimeFromTimestamp(timestamp: number): string[] {\n  return new Date(timestamp)\n    .toLocaleString(undefined, { timeZone: \"Asia/Kolkata\" })\n    .split(\", \");\n}\n\nexport const mapAbhyasiIdCheckinDataToCellValues: (\n  data: IAbhyasiCheckinApiStoreData[]\n) => string[][] = map<IAbhyasiCheckinApiStoreData, string[]>(\n  (abhyasiIdData = getDefaultAbhyasiData()) => {\n    const [date, time]: string[] = getISTDateTimeFromTimestamp(\n      abhyasiIdData.timestamp\n    );\n\n    const [reportDate, reportTime] = getISTDateTimeFromTimestamp(Date.now());\n    console.log({ abhyasiIdData });\n    return [\n      reportDate,\n      reportTime,\n      date,\n      time,\n      abhyasiIdData.abhyasiId,\n      abhyasiIdData.deviceId,\n    ];\n  }\n);\n\nconst updateReportForAbhyasiIdCheckins = async () => {\n  try {\n    // console.log('try to update report');\n    const { data } = await fetchAbhyasiIdCheckinsNotUpdatedInReport();\n    const formattedDataForSheet = mapAbhyasiIdCheckinDataToCellValues(data);\n    console.log({ formattedDataForSheet })\n  } catch (error) {\n    console.log('Error in updating report for abhyasiIdCheckins', error);\n  }\n}\n\nexport const generateReport = async() => {\n  await updateReportForAbhyasiIdCheckins();\n}"]}