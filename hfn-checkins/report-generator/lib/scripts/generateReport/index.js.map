{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/scripts/generateReport/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { app } from './firebase-app'\nimport { CheckinTypesEnum, CheckinWithEmailOrMobileApiStoreData, IAbhyasiCheckinApiStoreData, } from '@hfn-checkins/types';\nimport { map } from 'lodash/fp'\nimport {google, sheets_v4 as sheetsV4} from \"googleapis\";\nimport { QueryDocumentSnapshot } from '@google-cloud/firestore';\n\nconst CHECKINS_COLLECTION_NAME = \"checkins\";\nconst NUMBER_OF_RECORDS = 500;\n\ninterface IMapEmailOrMobileCheckinDataToCellValues {\n  (data: CheckinWithEmailOrMobileApiStoreData[]): (string | undefined)[][];\n}\n\ninterface IResponse  {\n  status: \"success\" | \"error\";\n  message?: string;\n}\n\ninterface FetchAbhyasiIdCheckinsNotUpdatedInReport {\n  <T>(type: CheckinTypesEnum): Promise<{\n    docs: QueryDocumentSnapshot<T>[];\n    data: T[];\n  }>;\n}\n\nconst fetchCheckinsNotUpdatedInReport: FetchAbhyasiIdCheckinsNotUpdatedInReport =\n  async <T>(type: CheckinTypesEnum) => {\n    try {\n      const db = app.firestore();\n      const abhyasiIdCheckinsNotUpdatedInReport = (await db\n        .collection(CHECKINS_COLLECTION_NAME)\n        .where(\"type\", \"==\", type)\n        .where(\"updatedInReport\", \"==\", false)\n        .limit(NUMBER_OF_RECORDS)\n        .get()) as FirebaseFirestore.QuerySnapshot<T>;\n      console.log(abhyasiIdCheckinsNotUpdatedInReport.size);\n      const docsAndData = abhyasiIdCheckinsNotUpdatedInReport.docs.map(\n        (doc) => ({\n          doc,\n          data: doc.data(),\n        })\n      );\n\n      return docsAndData.reduce(\n        (acc, { doc, data }) => {\n          return {\n            docs: [...acc.docs, doc],\n            data: [...acc.data, data],\n          };\n        },\n        {\n          docs: [] as QueryDocumentSnapshot<T>[],\n          data: [] as T[],\n        }\n      );\n    } catch (error) {\n      throw new Error(\"Error in fetching abhyasiIdCheckinsNotUpdatedInReport\");\n    }\n  };\n\nfunction getDefaultAbhyasiData(): IAbhyasiCheckinApiStoreData {\n  return {\n    abhyasiId: \"\",\n    deviceId: \"\",\n    timestamp: 0,\n    type: CheckinTypesEnum.AbhyasiId,\n    updatedInReport: false,\n  };\n}\n\nexport function getISTDateTimeFromTimestamp(timestamp: number): string[] {\n  return new Date(timestamp)\n    .toLocaleString(undefined, { timeZone: \"Asia/Kolkata\" })\n    .split(\", \");\n}\n\nexport const mapAbhyasiIdCheckinDataToCellValues: (\n  data: IAbhyasiCheckinApiStoreData[]\n) => string[][] = map<IAbhyasiCheckinApiStoreData, string[]>(\n  (abhyasiIdData = getDefaultAbhyasiData()) => {\n    const [date, time]: string[] = getISTDateTimeFromTimestamp(\n      abhyasiIdData.timestamp\n    );\n    const [reportDate, reportTime] = getISTDateTimeFromTimestamp(Date.now());\n    return [\n      reportDate,\n      reportTime,\n      date,\n      time,\n      abhyasiIdData.abhyasiId,\n      abhyasiIdData.deviceId,\n    ];\n  }\n  );\n\n\nconst appendSpreadsheet = async (\n  spreadsheetId: string,\n  range: string,\n  values: (string | undefined)[][]\n): Promise<IResponse> => {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const auth: any = new google.auth.GoogleAuth({\n    keyFile: `./creds-${process.env.NODE_ENV}.json`,\n    scopes: [\n      \"https://www.googleapis.com/auth/cloud-platform\",\n      \"https://www.googleapis.com/auth/drive\",\n      \"https://www.googleapis.com/auth/spreadsheets\",\n    ],\n  });\n\n  const service = google.sheets({ version: \"v4\", auth });\n  const resource: sheetsV4.Params$Resource$Spreadsheets$Values$Append = {\n    spreadsheetId,\n    range,\n    valueInputOption: \"USER_ENTERED\",\n    requestBody: {\n      values,\n    },\n  };\n  await service.spreadsheets.values.append(resource);\n\n  return { status: \"success\" };\n  } catch (error) {\n    console.log('Error in appending spreadsheet', error);\n    return {status: \"error\", message: error.message};\n  }\n}\n\nconst updateDocsWithUpdatedInReport = async (docs: QueryDocumentSnapshot[]) => {\n  try {\n    const db = app.firestore();\n    const batch = db.batch();\n    docs.forEach((doc) => {\n      batch.update(doc.ref, { updatedInReport: true });\n    });\n    await batch.commit();\n  } catch (error) {\n    console.log(\"Error in updateDocsWithUpdatedInReport\", error);\n  }\n};\n\nconst updateReportForAbhyasiIdCheckins = async () => {\n  try {\n    const { data, docs } = await fetchCheckinsNotUpdatedInReport<IAbhyasiCheckinApiStoreData>(CheckinTypesEnum.AbhyasiId);\n    const formattedDataForSheet = mapAbhyasiIdCheckinDataToCellValues(data);\n    const response = await appendSpreadsheet(\n      process.env.SHEET_ID,\n      \"AbhyasiIdCheckins!A1\",\n      formattedDataForSheet\n    );\n    if (response.status === \"success\") {\n      await updateDocsWithUpdatedInReport(docs);\n    }\n  } catch (error) {\n    console.log(\"Error in updateReportForAbhyasiIdCheckins\", error);\n  }\n}\n\n\nconst getGender = (gender: \"M\" | \"F\" | \"U\"): string => {\n  switch (gender) {\n    case \"M\":\n      return \"Male\";\n    case \"F\":\n      return \"Female\";\n    case \"U\":\n      return \"Unspecified\";\n    default:\n      return \"Not Updated\";\n  }\n};\n\nconst getValue = (emailOrMobile: string | undefined): string | undefined => emailOrMobile;\n\nexport const mapEmailOrMobileCheckinDataToCellValues: IMapEmailOrMobileCheckinDataToCellValues =\n  map((data) => {\n    const [date, time]: string[] = getISTDateTimeFromTimestamp(data.timestamp);\n\n    const [reportDate, reportTime] = getISTDateTimeFromTimestamp(Date.now());\n\n    return [\n      reportDate,\n      reportTime,\n      date,\n      time,\n      data.fullName,\n      getGender(data.gender),\n      data.ageGroup,\n      getValue((data as { mobile?: string }).mobile),\n      getValue((data as { email?: string }).email),\n      data.city,\n      data.state,\n      data.country,\n      data.deviceId,\n    ];\n  });\n\nconst updateReportForEmailOrMobileCheckins = async () => {\n  try {\n    const { docs, data } =\n      (await fetchCheckinsNotUpdatedInReport<\n      CheckinWithEmailOrMobileApiStoreData>(CheckinTypesEnum.EmailOrMobile));\n    const mappedData = mapEmailOrMobileCheckinDataToCellValues(data);\n    const response = await appendSpreadsheet(\n      process.env.SHEET_ID,\n      \"EmailOrMobileCheckins!A1\",\n      mappedData\n    );\n    if (response.status === \"success\") {\n      await updateDocsWithUpdatedInReport(docs);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport const generateReport = async() => {\n  try {\n    await updateReportForAbhyasiIdCheckins();\n    await updateReportForEmailOrMobileCheckins();\n  } catch (error) {\n    console.log('Error in generateReport', error);\n  }\n}\n"]}