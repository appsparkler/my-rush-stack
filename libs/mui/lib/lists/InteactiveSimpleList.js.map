{"version":3,"file":"InteactiveSimpleList.js","sourceRoot":"","sources":["../../src/lists/InteactiveSimpleList.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Add, Delete as DeleteIcon } from '@mui/icons-material';\nimport {\n  Box,\n  IconButton,\n  TextField,\n  TextFieldProps,\n  Typography,\n} from '@mui/material';\nimport {\n  filterOutWithId,\n  findById,\n  updateItemWithMatchingId,\n} from 'common-utils';\nimport { TextFieldChangeEventHandler } from 'common-types';\nimport { noop, uniqueId } from 'lodash/fp';\nimport { Horizontal, Vertical } from '../layouts';\nimport React, { useCallback } from 'react';\n\n// utils\nexport const getDefaultInteactiveSimpleListItem = (): TextFieldProps => {\n  return { id: uniqueId('interactive-simple-list-item'), value: '' };\n};\n\n// jsx\nexport type InteactiveSimpleListProps = {\n  title?: string;\n  label?: string;\n  ariaLabelAdd?: string;\n  ariaLabelDelete?: string;\n  name?: string;\n  value?: TextFieldProps[];\n  onChange?: (name: string, value: TextFieldProps[]) => void;\n};\n\nexport const InteactiveSimpleList = ({\n  title = '',\n  label = '',\n  ariaLabelAdd = '',\n  ariaLabelDelete = '',\n  name = '',\n  onChange = noop,\n  value = [],\n}: InteactiveSimpleListProps) => {\n  const handleChangeItem = useCallback<\n    (id: TextFieldProps['id']) => TextFieldChangeEventHandler\n  >(\n    (id) =>\n      ({ target: { value: $value } }) => {\n        if (id) {\n          const ctxItem = findById<TextFieldProps, string>(id)(value);\n          if (ctxItem) {\n            const updatedItems: TextFieldProps[] =\n              updateItemWithMatchingId<TextFieldProps>({\n                ...ctxItem,\n                value: $value,\n              })(value);\n            onChange(name, updatedItems);\n          }\n        }\n      },\n    [name, onChange, value]\n  );\n\n  const handleClickAdd = useCallback(() => {\n    onChange(name, [...value, getDefaultInteactiveSimpleListItem()]);\n  }, [name, onChange, value]);\n\n  const handleClickDelete = useCallback<\n    (id: TextFieldProps['id']) => () => void\n  >(\n    (id) => () => {\n      if (id) {\n        onChange(name, filterOutWithId<TextFieldProps>(id)(value));\n      }\n    },\n    [name, onChange, value]\n  );\n\n  return (\n    <Vertical gap={1}>\n      <Typography variant=\"h6\">{title}</Typography>\n      <Vertical gap={2}>\n        {value.map((item, index) => (\n          <Horizontal key={item.id}>\n            <TextField\n              label={label}\n              size=\"small\"\n              fullWidth\n              type=\"text\"\n              key={item.id}\n              onChange={handleChangeItem(item.id)}\n              {...item}\n            />\n            <Box>\n              {index === 0 ? (\n                <IconButton\n                  aria-label={ariaLabelAdd}\n                  color=\"primary\"\n                  size=\"small\"\n                  onClick={handleClickAdd}\n                >\n                  <Add />\n                </IconButton>\n              ) : (\n                <IconButton\n                  aria-label={ariaLabelDelete}\n                  color=\"warning\"\n                  size=\"small\"\n                  onClick={handleClickDelete(item.id)}\n                  disabled={index === 0}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n            </Box>\n          </Horizontal>\n        ))}\n      </Vertical>\n    </Vertical>\n  );\n};\n"]}